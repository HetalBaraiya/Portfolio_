/*! particles.js v2.0.0 by Vincent Garreau */
!(function (a) {
  "use strict";
  var b = a.document,
    c = "canvas",
    d = "rgba",
    e = Math.random,
    f = Math.floor,
    g = Math.sin,
    h = Math.cos,
    i = Math.PI,
    j = Object.prototype.toString,
    k =
      window.requestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.msRequestAnimationFrame ||
      function (a) {
        window.setTimeout(a, 1000 / 60);
      };
  function l(a, b) {
    return a.x < b.x ? -1 : a.x > b.x ? 1 : 0;
  }
  function m(a, b) {
    return a.y < b.y ? -1 : a.y > b.y ? 1 : 0;
  }
  function n(a, b) {
    return a.radius < b.radius ? -1 : a.radius > b.radius ? 1 : 0;
  }
  function o(a, b) {
    return a.opacity < b.opacity ? -1 : a.opacity > b.opacity ? 1 : 0;
  }
  function p(a, b) {
    return a.color.localeCompare(b.color);
  }
  function q(a, b) {
    return a.zIndex < b.zIndex ? -1 : a.zIndex > b.zIndex ? 1 : 0;
  }
  function r(a) {
    var b = {};
    return (
      Object.keys(a).forEach(function (c) {
        b[c] = a[c];
      }),
      b
    );
  }
  function s(a, b) {
    for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
    return a;
  }
  function t(a, b, c) {
    a.beginPath(), a.arc(b.x, b.y, c, 0, 2 * i, !1), a.closePath(), a.fill();
  }
  function u(a, b) {
    return (
      b.color ? (a.fillStyle = b.color) : b.color && (a.strokeStyle = b.color),
      a
    );
  }
  function v(a, b) {
    return b.opacity && (a.globalAlpha = b.opacity), a;
  }
  function w(a, b, c, d, e, f, g, h, j, k) {
    return (
      a.beginPath(),
      a.moveTo(b, c),
      a.lineTo(d, e),
      a.lineTo(f, g),
      a.lineTo(h, j),
      a.lineTo(b, c),
      (a.fillStyle = k),
      a.fill(),
      a.closePath(),
      a
    );
  }
  function x(a, b, c, d, e) {
    return (
      a.beginPath(),
      a.moveTo(b, c),
      a.lineTo(d, e),
      a.stroke(),
      a.closePath(),
      a
    );
  }
  function y(a) {
    return a * a;
  }
  function z(a, b) {
    return Math.sqrt(y(a.x - b.x) + y(a.y - b.y));
  }
  function A(a, b, c) {
    return Math.sqrt(y(b.x - a) + y(c.y - a));
  }
  function B(a, b) {
    return Math.sqrt(y(a) + y(b));
  }
  function C(a, b) {
    return a < b ? a : b;
  }
  function D(a, b) {
    return a > b ? a : b;
  }
  function E(a) {
    return (a * Math.PI) / 180;
  }
  function F(a) {
    return (180 * a) / i;
  }
  function G(a, b) {
    return { value: a, anim: b };
  }
  function H() {
    return "object" == typeof module && "object" == typeof module.exports;
  }
  function I(a, b) {
    (this.x = a), (this.y = b);
  }
  function J(a, b) {
    (this.color = a), (this.opacity = b);
  }
  function K(a, b, c, d, e, f) {
    (this.x = a),
      (this.y = b),
      (this.radius = c),
      (this.color = d),
      (this.opacity = e),
      (this.vx = f.vx),
      (this.vy = f.vy);
  }
  function L(a) {
    (this.params = a),
      (this.canvas = b.createElement(c)),
      (this.canvas.className = "particles-js-canvas-el"),
      (this.ctx = this.canvas.getContext("2d")),
      (this.canvas.style.position = "absolute"),
      (this.canvas.style.top = "0px"),
      (this.canvas.style.left = "0px"),
      (this.canvas.style.zIndex = a.zIndex),
      (this.canvas.style.pointerEvents = "none"),
      (this.canvas.style.userSelect = "none"),
      (this.canvas.style.width = "100%"),
      (this.canvas.style.height = "100%"),
      a.el.appendChild(this.canvas),
      this.resize(),
      (this.particles = []);
  }
  function M(a) {
    var b = a.params,
      c = a.canvas,
      d = a.ctx,
      e = a.particles;
    d.clearRect(0, 0, c.width, c.height),
      (function () {
        for (var a = 0; a < e.length; a++) {
          var b = e[a];
          u(d, b), v(d, b), t(d, b, b.radius);
        }
      })();
  }
  function N(a, b) {
    var c = a.canvas,
      d = a.ctx,
      e = a.particles,
      f = b ? b.x : e[e.length - 1].x + e[e.length - 1].radius * 2,
      g = b ? b.y : e[e.length - 1].y + e[e.length - 1].radius * 2,
      h = 0,
      i = 0;
    if (f > c.width || g > c.height) return !1;
    for (var j = 0; j < e.length; j++) {
      var k = e[j];
      if (z({ x: f, y: g }, k) < k.radius + 5) return !1;
    }
    return !0;
  }
  function O(a) {
    for (
      var b = a.params,
        c = a.particles.length < Math.min(b.number.value, b.number.limit),
        d = !1,
        e = 0;
      e < b.number.density.value_area;
      e++
    ) {
      var f = {
          x: (e % Math.sqrt(b.number.density.value_area)) * b.number.value,
          y: ~~(e / Math.sqrt(b.number.density.value_area)) * b.number.value,
        },
        g = { vx: 2 * e() - 1, vy: 2 * e() - 1 };
      if (c && N(a, f)) {
        var h = new K(
          f.x,
          f.y,
          b.size.value,
          b.color.value,
          b.opacity.value,
          g
        );
        a.particles.push(h), (d = !0);
      }
    }
    return d;
  }
  function P(a) {
    a.ctx.clearRect(0, 0, a.canvas.width, a.canvas.height);
  }
  function Q(a) {
    var b = a.params,
      c = a.ctx;
    b.retina &&
      ((a.canvas.width = 2 * b.el.offsetWidth),
      (a.canvas.height = 2 * b.el.offsetHeight),
      c.scale(2, 2)),
      (a.canvas.width = b.el.offsetWidth),
      (a.canvas.height = b.el.offsetHeight);
  }
  function R(a) {
    var b = a.particles,
      c = a.params,
      d = a.ctx;
    d.clearRect(0, 0, a.canvas.width, a.canvas.height);
    for (var e = 0; e < b.length; e++) {
      var f = b[e];
      u(d, f), v(d, f), t(d, f, f.radius);
    }
    if (c.line_linked.enable)
      for (var g = 0; g < b.length; g++)
        for (var h = g + 1; h < b.length; h++) {
          var i = b[g],
            j = b[h],
            k = z(i, j);
          k <= c.line_linked.distance &&
            (d.beginPath(),
            (d.strokeStyle = c.line_linked.color),
            (d.globalAlpha = c.line_linked.opacity),
            d.moveTo(i.x, i.y),
            d.lineTo(j.x, j.y),
            d.stroke(),
            d.closePath());
        }
  }
  function S(a) {
    var b = a.particles,
      c = a.params;
    for (var d = 0; d < b.length; d++) {
      var e = b[d];
      (e.x += e.vx),
        (e.y += e.vy),
        (e.x + e.radius > c.el.offsetWidth || e.x - e.radius < 0) &&
          (e.vx *= -1),
        (e.y + e.radius > c.el.offsetHeight || e.y - e.radius < 0) &&
          (e.vy *= -1);
    }
  }
  function T(a) {
    a.particles = [];
    for (var b = 0; b < a.params.number.value; b++) O(a);
  }
  function U(a) {
    function b() {
      R(a), S(a), k(b);
    }
    b();
  }
  function V(a, b) {
    return new L(s(a, { el: b }));
  }
  function W(a, b) {
    var c = new L(s(a, { el: b }));
    return T(c), U(c), c;
  }
  function X(a, b) {
    return new Promise(function (c) {
      a ? c(b()) : c(null);
    });
  }
  "function" == typeof define && define.amd
    ? define("particlesJS", [], function () {
        return W;
      })
    : "object" == typeof module && module.exports
    ? (module.exports = W)
    : (a.particlesJS = W);
})(window);
